"""empty message

Revision ID: b160b583a6aa
Revises: 
Create Date: 2020-01-21 00:36:24.484628

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from enum import Enum


# revision identifiers, used by Alembic.
revision = 'b160b583a6aa'
down_revision = None
branch_labels = None
depends_on = None

class RoleType(Enum):
    funder = 0
    farmer = 1

STAGE = [
    ('open', 'open'),
    ('closed', 'closed')
]

STATUS = [
    ('pending', 'pending'),
    ('confirmed', 'confirmed')
]

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('token_blacklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=50), nullable=False),
    sa.Column('token_type', sa.String(length=10), nullable=False),
    sa.Column('user_identity', sa.String(length=50), nullable=False),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.Column('expires', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=140), nullable=True),
    sa.Column('bank_name', sa.String(length=64), nullable=True),
    sa.Column('role', sqlalchemy_utils.types.choice.ChoiceType(RoleType), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.Column('createdon', sa.DateTime(), nullable=True),
    sa.Column('bank_account_num', sa.String(length=64), nullable=True),
    sa.Column('bank_account_name', sa.String(length=64), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_createdon'), 'users', ['createdon'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('farm',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('stage', sqlalchemy_utils.types.choice.ChoiceType(STAGE), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('duration', sa.String(length=300), nullable=True),
    sa.Column('location', sa.String(length=300), nullable=True),
    sa.Column('units', sa.Integer(), nullable=True),
    sa.Column('margin', sa.Float(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('createdon', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_farm_createdon'), 'farm', ['createdon'], unique=False)
    op.create_table('funded_farm',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('createdon', sa.DateTime(), nullable=True),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(STATUS), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('units', sa.Integer(), nullable=True),
    sa.Column('payout', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('farm_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_funded_farm_createdon'), 'funded_farm', ['createdon'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_funded_farm_createdon'), table_name='funded_farm')
    op.drop_table('funded_farm')
    op.drop_index(op.f('ix_farm_createdon'), table_name='farm')
    op.drop_table('farm')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_createdon'), table_name='users')
    op.drop_table('users')
    op.drop_table('token_blacklist')
    # ### end Alembic commands ###
